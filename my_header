#include <stdio.h>
#include <stdlib.h>

int str_len(char *str)
{
    int len = 0;
    while(str[len] != '\0')
    {
        len++;
    }
    /* If str = "Hello"
    Its actual size is 6 Bytes Including NULL;
    str_len will return 5, ie., excludinh Null character;
    */
    return len;
}

void swap_char(char *str1, char *str2)
{
    char temp;
    temp = *str1;
    *str1 = *str2;
    *str2 = temp;
}

void str_cpy(const char* org_str, char* new_str)
{
    int i=0;
    while(org_str[i] != '\0')
    {
        new_str[i] = org_str[i]; 
        i++;
    }
    new_str[i] = '\0';
}

char* rev_org_str(char* str)
{
    int len = str_len(str);
    len--; //To reverse if we dont decrement, it will reverse NULL char also
    char temp;
    for(int i=0; i<len/2; i++)
    {
        swap_char(&str[i], &str[len - i]);
    }
    //Reversing the original string
    return str;
}

char* rev_new_str(char* str)
{
    /* How to pass
    char *str1 = rev_new_str(str);
    */
    int len = str_len(str);
    
    char *new_str = malloc(sizeof(char) * (len+1) ); //Here len+1 is used to store NULL
    str_cpy(str, new_str);
    len--; //To reverse if we dont decrement, it will reverse NULL char also
    
    for(int i=0; i<len/2; i++)
    {
        swap_char(&new_str[i], &new_str[len - i]);
    }
    //Reversing the original string
    return new_str;
}

int main()
{
    char str[] = "Hello World", str2[11];
    char *str1 = rev_new_str(str);
    //str_cpy(str, str2);
    printf("%s\n", str);
    printf("%s\n",str1);
}
